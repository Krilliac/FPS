<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{5191A59A-BF5A-349C-8B7A-C7E12441A3B7}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.26100.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>SparkEngine</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Spark Engine\SparkEngine\build\bin\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">SparkEngine.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">SparkEngine</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <LocalDebuggerWorkingDirectory Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/Spark Engine/SparkEngine</LocalDebuggerWorkingDirectory>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Spark Engine\SparkEngine\build\bin\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">SparkEngine.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">SparkEngine</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <LocalDebuggerWorkingDirectory Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/Spark Engine/SparkEngine</LocalDebuggerWorkingDirectory>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Spark Engine\SparkEngine\build\bin\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">SparkEngine.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">SparkEngine</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <LocalDebuggerWorkingDirectory Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/Spark Engine/SparkEngine</LocalDebuggerWorkingDirectory>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Spark Engine\SparkEngine\build\bin\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">SparkEngine.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">SparkEngine</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
    <LocalDebuggerWorkingDirectory Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/Spark Engine/SparkEngine</LocalDebuggerWorkingDirectory>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4005;4996;4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying shaders from D:/Spark Engine/SparkEngine/Spark Engine/Shaders	Copying shaders to working directory	Copying assets from D:/Spark Engine/SparkEngine/Assets	Copying Scripts from D:/Spark Engine/SparkEngine/Assets/Scripts	Creating asset directory structure</Message>
      <Command>setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/build/bin/Debug/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets" "D:/Spark Engine/SparkEngine/build/bin/Debug/Assets"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets/Scripts" "D:/Spark Engine/SparkEngine/build/bin/Debug/Scripts"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Shaders"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Shaders/HLSL"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Assets"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Models"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Textures"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Audio"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Scripts"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Debug/Config"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\Debug\libcurl-d.lib;d3d11.lib;dxgi.lib;d3dcompiler.lib;dxguid.lib;winmm.lib;ws2_32.lib;wsock32.lib;ole32.lib;oleaut32.lib;uuid.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;comdlg32.lib;advapi32.lib;crypt32.lib;wldap32.lib;normaliz.lib;lib\Debug\miniz.lib;bcrypt.lib;secur32.lib;iphlpapi.lib;ws2_32.lib;advapi32.lib;crypt32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Spark Engine/SparkEngine/build/lib/Debug/SparkEngine.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Spark Engine/SparkEngine/build/bin/Debug/SparkEngine.pdb</ProgramDataBaseFile>
      <SubSystem>Windows</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4005;4996;4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying shaders from D:/Spark Engine/SparkEngine/Spark Engine/Shaders	Copying shaders to working directory	Copying assets from D:/Spark Engine/SparkEngine/Assets	Copying Scripts from D:/Spark Engine/SparkEngine/Assets/Scripts	Creating asset directory structure</Message>
      <Command>setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/build/bin/Release/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets" "D:/Spark Engine/SparkEngine/build/bin/Release/Assets"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets/Scripts" "D:/Spark Engine/SparkEngine/build/bin/Release/Scripts"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Shaders"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Shaders/HLSL"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Assets"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Models"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Textures"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Audio"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Scripts"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/Release/Config"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\Release\libcurl.lib;d3d11.lib;dxgi.lib;d3dcompiler.lib;dxguid.lib;winmm.lib;ws2_32.lib;wsock32.lib;ole32.lib;oleaut32.lib;uuid.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;comdlg32.lib;advapi32.lib;crypt32.lib;wldap32.lib;normaliz.lib;lib\Release\miniz.lib;bcrypt.lib;secur32.lib;iphlpapi.lib;ws2_32.lib;advapi32.lib;crypt32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Spark Engine/SparkEngine/build/lib/Release/SparkEngine.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Spark Engine/SparkEngine/build/bin/Release/SparkEngine.pdb</ProgramDataBaseFile>
      <SubSystem>Windows</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DisableSpecificWarnings>4005;4996;4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying shaders from D:/Spark Engine/SparkEngine/Spark Engine/Shaders	Copying shaders to working directory	Copying assets from D:/Spark Engine/SparkEngine/Assets	Copying Scripts from D:/Spark Engine/SparkEngine/Assets/Scripts	Creating asset directory structure</Message>
      <Command>setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets" "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Assets"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets/Scripts" "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Scripts"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Shaders"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Shaders/HLSL"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Assets"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Models"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Textures"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Audio"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Scripts"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/Config"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\MinSizeRel\libcurl.lib;d3d11.lib;dxgi.lib;d3dcompiler.lib;dxguid.lib;winmm.lib;ws2_32.lib;wsock32.lib;ole32.lib;oleaut32.lib;uuid.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;comdlg32.lib;advapi32.lib;crypt32.lib;wldap32.lib;normaliz.lib;lib\MinSizeRel\miniz.lib;bcrypt.lib;secur32.lib;iphlpapi.lib;ws2_32.lib;advapi32.lib;crypt32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Spark Engine/SparkEngine/build/lib/MinSizeRel/SparkEngine.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Spark Engine/SparkEngine/build/bin/MinSizeRel/SparkEngine.pdb</ProgramDataBaseFile>
      <SubSystem>Windows</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /bigobj</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4005;4996;4244;4267</DisableSpecificWarnings>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <LanguageStandard>stdcpp20</LanguageStandard>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;NETWORKING_ENABLED;CURL_STATICLIB;EDITOR_ENABLED;GRAPHICS_ENABLED;COLLABORATIVE_ENABLED;PROFILING_ENABLED;ASSET_STREAMING_ENABLED;HOT_RELOAD_ENABLED;TERRAIN_SYSTEM_ENABLED;POST_PROCESSING_ENABLED;LIGHTING_SYSTEM_ENABLED;ADVANCED_INPUT_ENABLED;WIN32_LEAN_AND_MEAN;NOMINMAX;_CRT_SECURE_NO_WARNINGS;MINIZ_STATIC_DEFINE;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Spark Engine\SparkEngine\Spark Engine\Source;D:\Spark Engine\SparkEngine\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\tinyobjloader\include;D:\Spark Engine\SparkEngine\ThirdParty\Utils\miniz;D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying shaders from D:/Spark Engine/SparkEngine/Spark Engine/Shaders	Copying shaders to working directory	Copying assets from D:/Spark Engine/SparkEngine/Assets	Copying Scripts from D:/Spark Engine/SparkEngine/Assets/Scripts	Creating asset directory structure</Message>
      <Command>setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Spark Engine/Shaders" "D:/Spark Engine/SparkEngine/Shaders"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets" "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Assets"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E copy_directory "D:/Spark Engine/SparkEngine/Assets/Scripts" "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Scripts"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Shaders"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Shaders/HLSL"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Assets"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Models"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Textures"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Audio"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Scripts"
if %errorlevel% neq 0 goto :cmEnd
"C:\Program Files (x86)\CMake\bin\cmake.exe" -E make_directory "D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/Config"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>lib\RelWithDebInfo\libcurl.lib;d3d11.lib;dxgi.lib;d3dcompiler.lib;dxguid.lib;winmm.lib;ws2_32.lib;wsock32.lib;ole32.lib;oleaut32.lib;uuid.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;comdlg32.lib;advapi32.lib;crypt32.lib;wldap32.lib;normaliz.lib;lib\RelWithDebInfo\miniz.lib;bcrypt.lib;secur32.lib;iphlpapi.lib;ws2_32.lib;advapi32.lib;crypt32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Spark Engine/SparkEngine/build/lib/RelWithDebInfo/SparkEngine.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Spark Engine/SparkEngine/build/bin/RelWithDebInfo/SparkEngine.pdb</ProgramDataBaseFile>
      <SubSystem>Windows</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Spark Engine\SparkEngine\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Spark Engine/SparkEngine/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" "-SD:/Spark Engine/SparkEngine" "-BD:/Spark Engine/SparkEngine/build" --check-stamp-file "D:/Spark Engine/SparkEngine/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCXXCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeRCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeSystem.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Spark Engine\SparkEngine\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Spark Engine/SparkEngine/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" "-SD:/Spark Engine/SparkEngine" "-BD:/Spark Engine/SparkEngine/build" --check-stamp-file "D:/Spark Engine/SparkEngine/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCXXCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeRCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeSystem.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Spark Engine\SparkEngine\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/Spark Engine/SparkEngine/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" "-SD:/Spark Engine/SparkEngine" "-BD:/Spark Engine/SparkEngine/build" --check-stamp-file "D:/Spark Engine/SparkEngine/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCXXCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeRCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeSystem.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Spark Engine\SparkEngine\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/Spark Engine/SparkEngine/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files (x86)\CMake\bin\cmake.exe" "-SD:/Spark Engine/SparkEngine" "-BD:/Spark Engine/SparkEngine/build" --check-stamp-file "D:/Spark Engine/SparkEngine/build/CMakeFiles/generate.stamp"
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCXXInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeCommonLanguageInclude.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeGenericSystem.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeInitializeConfigs.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeLanguageInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeRCInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInformation.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\CMakeSystemSpecificInitialize.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\CMakeCommonCompilerMacros.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Compiler\MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-C.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC-CXX.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows-MSVC.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\Windows.cmake;C:\Program Files (x86)\CMake\share\cmake-3.25\Modules\Platform\WindowsPaths.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeCXXCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeRCCompiler.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\3.25.2\CMakeSystem.cmake;D:\Spark Engine\SparkEngine\build\CMakeFiles\cmake.verify_globs;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Spark Engine\SparkEngine\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Audio\AudioEngine.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Audio\AudioEngine.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Audio\SoundEffect.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Audio\SoundEffect.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Camera\SparkEngineCamera.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Camera\SparkEngineCamera.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Core\SparkEngine.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Core\SparkEngine.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Core\framework.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Core\resource.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Core\targetver.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Engine\ECS\Components.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Engine\Scripting\AngelScriptEngine.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Console.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Console.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\CubeObject.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\CubeObject.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Game.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Game.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\GameObject.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\GameObject.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Model.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Model.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\ModelVertex.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\PlaceholderMesh.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\PlaneObject.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\PlaneObject.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Player.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Player.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Primitives.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Primitives.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\SphereObject.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\SphereObject.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Terrain.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Game\Terrain.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Graphics\GraphicsEngine.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Graphics\GraphicsEngine.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Graphics\Mesh.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Graphics\Mesh.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Graphics\Shader.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Graphics\Shader.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Input\InputManager.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Input\InputManager.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Physics\CollisionSystem.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Physics\CollisionSystem.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Bullet.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Bullet.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Grenade.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Grenade.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Projectile.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Projectile.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\ProjectilePool.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\ProjectilePool.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Rocket.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\Rocket.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Projectiles\WeaponStats.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\Assert.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\CrashHandler.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\CrashHandler.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\CrashHandlerHelpers.cpp" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\D3DUtils.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\D3DUtils.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\MathUtils.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\MathUtils.h" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\ObjectPool.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\Timer.cpp" />
    <ClInclude Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\Timer.h" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\Spark Engine\Source\Utils\TinyObjImpl.cpp" />
    <ClCompile Include="D:\Spark Engine\SparkEngine\build\tinyobj_impl.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Spark Engine\SparkEngine\build\ZERO_CHECK.vcxproj">
      <Project>{3B3EAB84-A10F-3C55-886F-BA9E58BEA0D1}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Spark Engine\SparkEngine\build\ThirdParty\Networking\curl\lib\libcurl_static.vcxproj">
      <Project>{5B7D6315-CE17-38E6-A8B8-21C4436243A4}</Project>
      <Name>libcurl_static</Name>
    </ProjectReference>
    <ProjectReference Include="D:\Spark Engine\SparkEngine\build\ThirdParty\Utils\miniz\miniz.vcxproj">
      <Project>{CCB8D980-A653-3CA1-B72A-7150F80A5C89}</Project>
      <Name>miniz</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>